function (x, y, laplace = 0, ...) 
{
    call <- match.call()
    Yname <- deparse(substitute(y))
    x <- as.data.frame(x)
    est <- function(var) if (is.numeric(var)) {
        cbind(tapply(var, y, mean, na.rm = TRUE), tapply(var, 
            y, sd, na.rm = TRUE))
    }
    else {
        tab <- table(y, var)
        (tab + laplace)/(rowSums(tab) + laplace * nlevels(var))
    }
    apriori <- table(y)
    tables <- lapply(x, est)
    for (i in 1:length(tables)) names(dimnames(tables[[i]])) <- c(Yname, 
        colnames(x)[i])
    names(dimnames(apriori)) <- Yname
    structure(list(apriori = apriori, tables = tables, levels = levels(y), 
        call = call), class = "naiveBayes")
}